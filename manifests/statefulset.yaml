---
apiVersion: v1
kind: Service
metadata:
  name: digitalocean-ip-bouncer
  labels:
    app: digitalocean-ip-bouncer
spec:
  ports:
    - port: 4000
      name: gossip
  selector:
    app: digitalocean-ip-bouncer
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: digitalocean-ip-bouncer
spec:
  serviceName: digitalocean-ip-bouncer
  replicas: 3
  selector:
    matchLabels:
      app: digitalocean-ip-bouncer
  template:
    metadata:
      labels:
        app: digitalocean-ip-bouncer
    spec:
      terminationGracePeriodSeconds: 10
      affinity:
        podAntiAffinity:                                 
          requiredDuringSchedulingIgnoredDuringExecution:
          - topologyKey: kubernetes.io/hostname
            labelSelector:
              matchLabels:
                app: digitalocean-ip-bouncer
      containers:
        - name: digitalocean-ip-bouncer
          image: ghcr.io/protosam/digitalocean-ip-bouncer:v2.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 4000
              name: gossip
          env:
            - name: DIGITALOCEAN_ACCESS_TOKEN
              valueFrom:
                secretKeyRef:
                  name: digitalocean-ip-bouncer
                  key: DIGITALOCEAN_ACCESS_TOKEN
            - name: DIGITALOCEAN_FLOATING_IP
              valueFrom:
                secretKeyRef:
                  name: digitalocean-ip-bouncer
                  key: DIGITALOCEAN_FLOATING_IP
            - name: K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            # service name pods will be served through
            # this is used to join the pod to the cluster
            - name: SERVICE_NAME
              value: digitalocean-ip-bouncer
  updateStrategy:
    type: RollingUpdate
